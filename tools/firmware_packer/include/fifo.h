//----------------------------------------------------------------------------------------------------------//
//                                                                                                          //
//                                                                                                          //
//                                                                                                          //
//                                                                                                          //
//                                                                                                          //
//                                                                                                          //
//                                                                                                          //
//                                                                                                          //
//                                                                                                          //
//                                                                                                          //
//    I BBMMBB      BBMMBBI     BBI EEMMFFI BBMMI     BBI EEMMFFI BBMMI       BBMMBBI   EEMMI EEMMLL        //
//    EEI   EEFF  EEI   LLBB  EEMMBBI I BBEE  I EE  EEMMBBI I BBEE  I EE    EEI   LLBB    EEBBI I BB        //
//  I FF        I EE      BBI   EEI     EEI   I EE    EEI     EEI   I EE  I EE      BBI   EEI   I EE        //
//  LLFF        LLEE      EELL  EEI     EEI   I EE    EEI     EEI   I EE  LLEE      EELL  EEI   I EE        //
//  I EE      I I BB      EEI   EEI     EEI   I EE    EEI     EEI   I EE  I BB      EEI   EEI   I EE        //
//    BBLL  I I   BBFF  I EE    EEI     EEI   I BB    EEI     EEI   I BB    BBFF  I EE    BBI   I EE        //
//    I BBMMEE    I BBMMBB    EEMMMMLLBBMMBBLLMMMMEEEEMMMMLLBBMMBBLLMMMMEE  I BBMMBB    EEMMMMLLBBMMBB      //
//                                                                                                          //
//                                                                                                          //
//                                                                                                          //
//                                                                                                          //
//                                                                                                          //
//                                                                                                          //
//                                                                                                          //
//                                                                                                          //
//----------------------------------------------------------------------------------------------------------//
//                                                                                                          //
//                                                Scott System                                              //
//                                                                                                          //
//                               (c) Copyright 2006-2007, Scottyu China                                     //
//                                                                                                          //
//                                           All Rights Reserved                                            //
//                                                                                                          //
// File    : fifo.h                                                                                         //
// By      : scottyu                                                                                        //
// Version : V1.00                                                                                          //
// Time    : 2008-07-15 15:30:22                                                                            //
//         :                                                                                                //
//----------------------------------------------------------------------------------------------------------//
//                                                                                                          //
// HISTORY                                                                                                  //
//                                                                                                          //
// 1 2008-07-15 15:30:22                                                                                    //
//                                                                                                          //
//                                                                                                          //
//                                                                                                          //
//----------------------------------------------------------------------------------------------------------//


#ifndef ___FIFO__H______
#define ___FIFO__H______



#include "basetypes.h"


//------------------------------------------------------------------------------------------------------------
//专用的数据结构来描叙循环缓冲区
//------------------------------------------------------------------------------------------------------------
typedef struct tagFIFO
{
	u8* ptr;		//缓冲区首指针
	u32 Type;		//缓冲区类型标识
	u32 BlockSize;	//缓冲区数据块的大小	
	u32	BlockNum;	//缓冲区数据块的数目
	u32	iWrite;		//写数据块的绝对序号，取模后可得到相对序号
	u32	iRead;		//读数据块的绝对序号，取模后可得到相对序号
}FIFO;
//说明：采用绝对序号可以保证WriteNum总是大于ReadNum，数据读写时采用相对序号。


//------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------
FIFO * CreateFifo(u32 blocksize, u32 blocknum, u32 type);


//------------------------------------------------------------------------------------------------------------
//缓冲区使用结束后应释放内存
//------------------------------------------------------------------------------------------------------------
u32 ReleaseFifo(FIFO * fifo);

//------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------
u32 FifoNum(FIFO * fifo);

//------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------
u32 FifoSize(FIFO * fifo);

//------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------
u32 FifoFree(FIFO * fifo);

//------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------
u32 FifoUsed(FIFO * fifo);

//------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------
u32 WriteFifo(FIFO * fifo, u8 * buffer, u32 size);


//------------------------------------------------------------------------------------------------------------
//从缓冲区读数据的算法
//------------------------------------------------------------------------------------------------------------
u32 ReadFifo(FIFO * fifo, u8 * buffer, u32 size);

//------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------
u32 CleanFifo(FIFO * fifo);

//------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------
u32 IsFifoFull(FIFO * fifo);


//------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------
u32 IsFifoEmpty(FIFO * fifo);


//------------------------------------------------------------------------------------------------------------
// THE END !
//------------------------------------------------------------------------------------------------------------

#endif //___FIFO__H______

